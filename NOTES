// GOOGLE = V8 ENGINE
// MICROSOFT EDGE = CHAKRA
// SAFARI = JAVASCRIPT CORE
// FIREFROX = SPIDERMONKEY
// The browser engine is the core component of a web browser that renders web pages.
// restfulAPI-> representational state transfer

// exception of NAN is = NAN **0 , it will give 1 output.

// typeof(console)=>Object
// typeof(console.log)=>function
// typeof(console.log())=>undefined
// typeof(null)=>object
// typeof(undefined)=>undefined
// typeof(function)=function
// typeof(object)=object

// alert( Boolean(" ") ); spaces, also true (any non-empty string is true)

// slice method did not take range(menas (1, 3) it will take from 1 to 2 only)and did not mak any changes in original array.
// ex->
// const Myarr = [1, 2, 3, 4]
// console.log(Myarr.slice(1, 3))

// splice method take range (menas (1,3), it will take 1 to 3)and splice method will update the orginal array means it will exclude the value from the original array.
// const Myarr = [1, 2, 3, 4]
// console.log(Myarr.splice(1, 3))
// console.log(Myarr)

// we can crete array like

// const myarr = new Array(1, 2, 3, 4)
// console.log(myarr)

// spread operator use in array like [...arr] , it use to spread the array in new array
// const myarr = [1, 2, 3, 4]
// const newArr = [23, 3]
// console.log([...myarr, ...newArr])

// flat method is use in array method to open the nested array in single array
// const myarr = [1, 2, [3, 41, [2, 3]]]
// console.log(myarr.flat(Infinity))

// objects

// we can create OBJECT using two ways object literals and constructor aslo with new keyword
// const obj=object.create(null)
// object can access through .dot notaion as well as square[] notaion

// const mySym =symbol("key1")
// const obj ={
// 	name:"manu",
// 	[mySym]:"key1"
// 	"email":"shuklamanu",
// 	age:24
// }
// console.log(obj.name)
// console.log(obj["email"])
// console.log(obj[mySym])

// to freeze the object use syntax object.freeze(object name)

// object using new keyword
// const obj = new Object() => it is a single ton object
// obj.id = 123
// obj.name = "manu"
// console.log(obj)

// object.assign() use to conact the object
// const obj1 = {
// 	name: "manu",
// 	age: 24
// }
// const obj2 = {
// 	email: "shuklamanu@gmail.com",
// 	phone: 1234567890
// }
// console.log(Object.assign({},obj1, obj2))

// spread operator ={...obj1,...obj2} to concat the two values

// to create object dynamically
// let a = "username";
// let b = "manu";
// const obj = {
//     [a]: b
// }
// console.log(obj);

// object desctructing->

// const course = {
//     courseName: "JS",
//     courseDuration: 6,
//     courseFees: 50000
// }
// console.log(course.courseFees)

// const { courseDuration: cD } = course
// console.log(cD)


// FUNCTIONS->

// when function define then we pass parameter

// function addTwo(num1,num2){  -> parameter
// 	console.log(num1+num2)
// }
// addTwo(5,6) -> argument

// when function call then we pass argume
// if we do not return anyting in fucntion it will cosnole undefined ,ex- console.log(functioncall)

// function logOutMessage(username) {
//     return `${username} logout succesfully`
// }
// console.log(logOutMessage("mayank"))     this is how we use function

//  rest operator always use in function definition
//  spred operator always use in function calling

// fucntions in  array and Object
// function calculatePrice(val1, val2, ...num1) {
//     return num1;
// }
// console.log(calculatePrice(10, 20, 30, 40, 50))

//funtions using object
// const user = {
//     name: "manu",
//     age: 25
// }
// function handleobject(anyobject) {
//     console.log(`username is ${anyobject.name} and age is ${anyobject.age}`);
// }
// handleobject(user)

const arr = [100, 200, 300, 300]

function thirdValuse(arr) {
    return [arr[1], arr[2]];
}
console.log(thirdValuse(arr))












